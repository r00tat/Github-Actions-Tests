name: "Pull Request Comment"

on:
  issue_comment:
    types: [created]

jobs:
  pull_request:
    name: "Lint and Test"
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/pipeline') && github.event.comment.author_association == 'OWNER' }}
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      actions: write
      checks: write
      statuses: write
      issues: write
    steps:
      - name: "Startup"
        run: |
          echo "running script v2"
      - name: Get PR details
        uses: xt0rted/pull-request-comment-branch@v2.0.0
        id: comment-branch
      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          HEAD_SHA: ${{ steps.comment-branch.outputs.head_sha }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "$HEAD_SHA"
      - name: Set commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
          context: manual pipeline trigger

      - name: "Checkout the repository"
        uses: "actions/checkout@v4.2.1"
      # - run: |
      #     gh pr checkout ${{ github.event.issue.number }}
      #     # do your job...
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required for gh
      - name: "Set up Python"
        uses: actions/setup-python@v5.2.0
        with:
          python-version: "3.12"
          cache: "pip"

      - name: "Install requirements"
        run: python3 -m pip install -r requirements.txt

      - name: "Lint"
        run: python3 -m ruff check

      - name: "Test"
        run: python3 -m unittest discover -v
        env: # Or as an environment variable
          HELLO: "WORLD"

      # - uses: actions/github-script@v7
      #   name: Action Result
      #   with:
      #     result-encoding: string
      #     script: |
      #       await github.rest.repos.createCommitStatus({
      #          owner: inputs.owner,
      #          repo: inputs.repo,
      #          sha: inputs.sha,
      #          state: inputs.state,
      #          target_url: inputs.targetUrl,
      #          description: inputs.description,
      #          context: inputs.context,
      #        });
      - name: "Action Result"
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          context: manual pipeline trigger
